VimFindsMe
--------- -

__light-weight, "fuzzy", &path dependent file browser for Vim on *nix__

and

__a generic option editor -- best suited for comma separated options__

and

__a library for your own interactive scratch buffer solutions__

TIP: If you like VimFindsMe and want to share the W00t!, I'm grateful for
https://www.gittip.com/bairuidahu/[tips] or
http://of-vim-and-vigor.blogspot.com/[beverages].

:VFMFiles
~~~~~~~~~

.Dependencies:

* The system ++find++ command (and would therefore probably not work on
  Windows)
* [optional] https://github.com/dahu/Vimple[Vimple] (for the
  https://github.com/dahu/Vimple[Vimple] Filter)

++VFMFiles++ relies on your +path+ option. Setting this to a Good
Value is crucial for getting the best out of VFM. Begin with this
entry in your +~/.vimrc+ :

  set path=.,**

.Defaults
====
* Ignores version-control directories and Vim swap files:
+
    let vfm_ignore = ['.hg', '.svn', '.bzr', '.git', 'CVS', '*.sw?']

* Doesn't show bare directories in browse results:
+
    let vfm_hide_dirs = 1

* Maximum directory depth of 4:
+
    let vfm_maxdepth = 4

* Skips your $HOME directory (if vfm_maxdepth is disabled):
+
    let vfm_skip_home = 1

* Uses the current buffer for the results browser:
+
    let vfm_use_split = 0
====

The ++:VFMFiles++ command does a system `find` within the paths in your
&path option and displays the results in a scratch buffer. Press
<enter> on a file in this browser buffer to open it in the current
window. Press ``q'' to quit the browser buffer without making a file
selection.

By default, ++VFMFiles++ uses `<leader>ge` to launch its browser.
This can be overridden through the `<plug>vfm_browse_files` map.

The file browser opens with the Vimple Filter (if vimple is installed,
and if not, a search prompt). If your search term is too sparsely
represented within the browse results, use the `cv` command to filter
the buffer down to only those lines matching your search.

:VFMDirs
~~~~~~~~

The ++VFMDirs++ command displays the set of directories you have
edited in a scratch buffer. Pressing ++<enter>++ on one of the
directories performs a ++:cd++ to that dir. This is handy when using
the recommended ++&path++ setting for VimFindsMe (of ++.,**++).

:VFMOpts
~~~~~~~~

The ++VFMOpts++ command displays the nominated option in a scratch
buffer. Pressing enter sets the option to the lines in the buffer
(with newlines replaced with comma). This is a handy way to edit long
and messy comma separated options in vim, like: ++&path++,
++&runtimepath++, ++&errorformat++

:VFMPaths
~~~~~~~~~

The ++VFMPaths++ command demonstrates the ++VFMOpts++ command.

See the documentation for more details.
